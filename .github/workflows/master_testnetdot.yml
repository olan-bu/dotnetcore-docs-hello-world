name: Build and deploy ASP.Net Core app to AWS

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ./publish

      - name: zip publish
        run: Compress-Archive -Path ./publish -DestinationPath ./publish/publish.zip

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Upload to S3
        run: | 
          aws s3 cp ./publish s3://ptg-sandbox-bucket/artifact/ --recursive

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # - name: Download to S3
      #   run: | 
      #     aws s3 cp s3://ptg-sandbox-bucket/artifact/publish.zip . --recursive

      # - name: Create ZIP deployment package
      #   run: zip -r publish.zip ./

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name Test-CICD \
          --source-bundle S3Bucket="ptg-sandbox-bucket/artifact",S3Key="publish.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"
  
      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name Test-CICD-env-1 --version-label "ver-${{ github.sha }}"
